<?xml version="1.0"?>
<!--
Copyright (c) 2023 Project CHIP Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<configurator>
  <domain name="CHIP"/>


  <enum name="EvseStateEnum" type="ENUM8">
    <cluster code="0x070C"/>
    <item name="NotPluggedIn"         value="0x00"  optional="false"/>
    <item name="PluggedInIdle"        value="0x01"  optional="false"/>
    <item name="PluggedInCharging"    value="0x02"  optional="false"/>
    <item name="PluggedInDischarging" value="0x03"  optional="false"/>
    <item name="SessionEnding"        value="0x04"  optional="false"/>
    <item name="Fault"                value="0xFF"  optional="false"/>
  </enum>

  <enum name="SupplyStateEnum" type="ENUM8">
    <cluster code="0x070C"/>
    <item name="Disabled"              value="0x00"  optional="false"/>
    <item name="ChargingEnabled"       value="0x01"  optional="false"/>
    <item name="DischargingEnabled"    value="0x02"  optional="true" />
    <item name="DisabledError"         value="0x03"  optional="false"/>
    <item name="DisabledDiagnostics"   value="0x04"  optional="false"/>
  </enum>

  <enum name="EvseFaultEnum" type="ENUM8">
    <cluster code="0x070C"/>
    <item name="NoError"            value="0x00"  optional="false"/>
    <item name="EvseMeterFailure"   value="0x01"  optional="false"/>
    <item name="OverVoltage"        value="0x02"  optional="false" />
    <item name="UnderVoltage"       value="0x03"  optional="false"/>
    <item name="OverCurrent"        value="0x04"  optional="false"/>
    <item name="ContactWetFailure"  value="0x05"  optional="false"/>
    <item name="ContactDryFailure"  value="0x06"  optional="false"/>
    <item name="GroundFault"        value="0x07"  optional="false"/>
    <item name="PowerLoss"          value="0x08"  optional="false"/>
    <item name="PowerQuality"       value="0x09"  optional="false"/>
    <item name="PilotShortCircuit"  value="0x0A"  optional="false"/>
    <item name="EmergencyStop"      value="0x0B"  optional="false"/>
    <item name="EvDisconnected"     value="0x0C"  optional="false"/>
    <item name="WrongPowerSupply"   value="0x0D"  optional="false"/>
    <item name="LiveNeutralSwap"    value="0x0E"  optional="false"/>
    <item name="OverTemperature"    value="0x0F"  optional="false"/>
    <item name="Other"              value="0xFF"  optional="false"/>
  </enum>

  <enum name="StartOfWeekEnum" type="ENUM8">
    <cluster code="0x070C"/>
    <item name="Sunday"     value="0x00"  optional="false"/>
    <item name="Monday"     value="0x01"  optional="false"/>
    <item name="Tuesday"    value="0x02"  optional="false"/>
    <item name="Wednesday"  value="0x03"  optional="false"/>
    <item name="Thursday"   value="0x04"  optional="false"/>
    <item name="Friday"     value="0x05"  optional="false"/>
    <item name="Saturday"   value="0x06"  optional="false"/>
  </enum>

  <enum name="ReasonEnum" type="ENUM8">
    <cluster code="0x070C"/>
    <item name="EvStopped"    value="0x00"  optional="false"/>
    <item name="EvseStopped"  value="0x01"  optional="false"/>
    <item name="Other"        value="0xFF"  optional="false"/>
  </enum>




  <struct name="ChargingTargetStruct">
    <cluster code="0x070C"/>
    <item name="TargetTime"   type="INT16U"  optional="false"/>
    <item name="TargetSoC"    type="INT8U"   optional="true"/>
    <item name="AddedEnergy"  type="INT32U"  optional="true"/>
  </struct>




  <cluster>
    <name>EVSE Management</name>
    <domain>Energy Management</domain>
    <description>This cluster provides an interface for the management of Electric Vehicle Supply Equipment (EVSE).</description>
    <code>0x070C</code>
    <define>EVSE_MANAGEMENT_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>

    
    <attribute side="server" code="0x0000" define="EVSE_STATE"       type="EvseStateEnum"     writable="false" optional="false"  isNullable="false" >EvseState</attribute>
    <attribute side="server" code="0x0001" define="SUPPLY_STATE"     type="SupplyStateEnum"   writable="false" optional="false"  isNullable="false" >SupplyState</attribute>
    <attribute side="server" code="0x0002" define="EVSE_FAULT"       type="EvseFaultEnum"     writable="false" optional="false"  isNullable="false" >EvseFault</attribute>
    <attribute side="server" code="0x0003" define="ENABLE_CHARGE_TIME"      type="INT16U"     writable="true"  optional="false"  isNullable="false" >EnableChargeTime</attribute>
    <attribute side="server" code="0x0004" define="ENABLE_DISCHARGE_TIME"   type="INT16U"     writable="true"  optional="false"  isNullable="false" >EnableDischargeTime</attribute>
    <attribute side="server" code="0x0005" define="CIRCUIT_CAPACITY"        type="INT16U"     writable="false" optional="false"  isNullable="false" >Circuit_capacity</attribute>
    <attribute side="server" code="0x0006" define="MINIMUM_CHARGE_CURRENT"  type="INT16U"     writable="false" optional="false"  isNullable="false" >MinimumChargeCurrent</attribute >
    <attribute side="server" code="0x0007" define="MAXIMUM_CHARGE_CURRENT"  type="INT16U"     writable="false" optional="false"  isNullable="false" >MaximumChargeCurrent</attribute >
    <attribute side="server" code="0x0008" define="MAXIMUM_DISCHARGE_CURRENT"   type="INT16U" writable="false" optional="false"  isNullable="false" >MaximumdDischargeCurrent</attribute >
    <attribute side="server" code="0x0009" define="USER_MAXIMUM_CHARGE_CURRENT" type="INT16U" writable="true"  optional="true"   isNullable="false" >UserMaximumChargeCurrent</attribute >
    <attribute side="server" code="0x000A" define="RANDOMISATION_DELAY_WINDOW"  type="INT16U" writable="true"  optional="true"   isNullable="false" >RandomisationDelayWindow</attribute >

    <attribute side="server" code="0x0020" define="START_OF_WEEK"              type="StartOfWeekEnum"  writable="false" optional="false"  isNullable="false" >StartOfWeek</attribute >
    <attribute side="server" code="0x0021" define="NUMBER_OF_WEEKLY_TARGETS"   type="INT8U"            writable="false" optional="false"  isNullable="false" >NumberOfWeeklyTargets</attribute >
    <attribute side="server" code="0x0022" define="NUMBER_OF_DAILY_TARGETS"    type="INT8U"            writable="false" optional="false"  isNullable="false" >NumberOfDailyTargets</attribute >
    <attribute side="server" code="0x0023" define="NEXT_CHARGE_START_TIME"     type="INT16U"           writable="false" optional="false"  isNullable="true"  >NextChargeStartTime</attribute >
    <attribute side="server" code="0x0024" define="NEXT_CHARGE_TARGET_TIME"    type="INT16U"           writable="false" optional="false"  isNullable="true"  >NextChargeTargetTime</attribute >
    <attribute side="server" code="0x0025" define="NEXT_CHARGE_REQUIRED_ENERGY" type="INT8U"           writable="false" optional="false"  isNullable="true"  >NextChargeRequiredEnergy</attribute >
    <attribute side="server" code="0x0026" define="NEXT_CHARGE_TARGET_SOC"     type="INT8U"            writable="false" optional="false"  isNullable="true"  >NextChargeTargetSoc</attribute >
    <attribute side="server" code="0x0027" define="APPROX_EV_EFFICIENCY"       type="INT16U"           writable="true"  optional="false"  isNullable="true"  >ApproxEvEfficiency</attribute >

    <attribute side="server" code="0x0030" define="STATE_OF_CHARGE"   type="INT8U"        writable="false" optional="false"  isNullable="true"  >StateOfCharge</attribute >
    <attribute side="server" code="0x0031" define="BATTERY_CAPACITY"  type="INT16U"       writable="false" optional="false"  isNullable="true"  >BatteryCapacity</attribute >
    <attribute side="server" code="0x0032" define="VEHICLE_ID"        type="CHAR_STRING"  writable="false" optional="false"  isNullable="true" length="32" >VehicleId</attribute >

    <attribute side="server" code="0x0040" define="EVSE_SESSION_ID"                 type="INT32U" writable="false" optional="false"  isNullable="false" >EvseSessionId</attribute >
    <attribute side="server" code="0x0041" define="EVENT_SEQUENCE_NUMBER"           type="INT16U" writable="false" optional="false"  isNullable="false" >EventSequenceNumber</attribute >
    <attribute side="server" code="0x0042" define="EVSE_SESSION_DURATION"           type="INT32U" writable="false" optional="false"  isNullable="false" >EvseSessionDuration</attribute >
    <attribute side="server" code="0x0043" define="EVSE_SESSION_ENERGY_CHARGED"     type="INT32U" writable="false" optional="false"  isNullable="false" >EvseSessionEnergyCharged</attribute >
    <attribute side="server" code="0x0044" define="EVSE_SESSION_ENERGY_DISCHARGED"  type="INT32U" writable="false" optional="false"  isNullable="false" >EvseSessionEnergyDischarged</attribute >
    <attribute side="server" code="0x0045" define="EVSE_SESSION_MAXIMUM_CURRENT"    type="INT16U" writable="false" optional="false"  isNullable="false" >EvseSessionMaximumCurrent</attribute >



    <command source="client" code="0x01" name="DisableEvse" optional="false">
      <description>Stops the power flow between the EV and the EVSE.</description>
    </command>

    <command source="client" code="0x02" name="EnableEvseCharging" optional="false">
      <description>Allows the EVSE to charge the EV for the specified time within the limits specified in the fields of the command.</description>
      <arg name="EvseEnableTime"       type="INT16U"   optional="false"  isNullable="true"  />
      <arg name="MinimumChargeCurrent" type="INT16U"   optional="false"  isNullable="false" />
      <arg name="MaximumChargeCurrent" type="INT16U"   optional="false"  isNullable="false" />
    </command>

    <command source="client" code="0x03" name="EnableEvseDischarging" optional="false">
      <description>Allows the EVSE to discharge the EV for the specified time within the limits specified in the fields of the command.</description>
      <arg name="EvseEnableTime"          type="INT16U"   optional="false"  isNullable="true"  />
      <arg name="MaximumDischargeCurrent" type="INT16U"   optional="false"  isNullable="false" />
    </command>

    <command source="client" code="0x04" name="StartDiagnostics" optional="true">
      <description>The EVSE SHALL enter a Diagnostics state only if the SupplyState attribute is in the Disabled state.</description>
    </command>

    <command source="client" code="0x05" name="SetTargets" optional="false">
      <description>The charging targets SHALL be stored in the EVSE and SHOULD begin at the time of receipt. A status code SHALL be sent in response.</description>
      <arg name="NumberOfTargetsForSequence" type="INT8U"            optional="false"/>
      <arg name="DayOfWeekForSequence"       type="StartOfWeekEnum"  optional="false"/>
      <arg name="ChargingTargets"            type="ChargingTargetStruct" array="true" length="10"  optional="false" />
    </command>

    <command source="client" code="0x06" name="GetTargets" optional="false">
      <description>The EVSE will send in return the Get Charging Targets Response command.</description>
      <arg name="DaysToReturn" type="StartOfWeekEnum" optional="false" />
    </command>

    <command source="client" code="0x07" name="ClearTargets" optional="false">
      <description>This clears the weekly schedule.</description>
    </command>

    <command source="server" code="0x00" name="GetTargetsResponse" optional="false">
      <description>This is the response to the Get Targets message</description>
    </command>


    <event code="0x0000" name="EvConnected" priority="info" side="server" optional="false">
      <description>Generated when the EV is plugged in.</description>
      <field id="0" name="EvseSessionId"  type="INT32U"         optional="false"/>
      <field id="1" name="EvseState"      type="EvseStateEnum"  optional="false"/>
    </event>

    <event code="0x0001" name="EvNotDetected" priority="info" side="server" optional="false">
      <description>Generated when the EV is unplugged or not detected (having been previously plugged in). When the vehicle is unplugged then the session is ended.</description>
      <field id="0" name="EvseSessionId"               type="INT32U"         optional="false"/>
      <field id="1" name="EvseState"                   type="EvseStateEnum"  optional="false"/>
      <field id="2" name="EvseSessionDuration"         type="INT32U"         optional="false"/>
      <field id="3" name="EvseSessionEnergyCharged"    type="INT32U"         optional="false"/>
      <field id="4" name="EvseSessionEnergyDischarged" type="INT32U"         optional="false"/>
    </event>

    <event code="0x0002" name="EnergyTransferStarted" priority="info" side="server" optional="false">
      <description>Generated when the EV starts charging or discharging (V2X only).</description>
      <field id="0" name="EvseSessionId"               type="INT32U"         optional="false"/>
      <field id="1" name="EvseState"                   type="EvseStateEnum"  optional="false"/>
      <field id="2" name="EvseSessionDuration"         type="INT16S"         optional="false"/>
    </event>

    <event code="0x0003" name="EnergyTransferStopped" priority="info" side="server" optional="false">
      <description>Generated when the EV stops charging or discharging (V2X only).</description>
      <field id="0" name="EvseSessionId"      type="INT32U"         optional="false"/>
      <field id="1" name="EvseState"          type="EvseStateEnum"  optional="false"/>
      <field id="2" name="Reason"             type="ReasonEnum"     optional="false"/>
      <field id="4" name="EnergyTransferred"  type="INT32S"         optional="false"/>
    </event>

    <event code="0x0004" name="Fault" priority="info" side="server" optional="false">
      <description>If the EVSE detects a fault, then it SHALL generate an unsolicited Event.</description>
      <field id="0" name="EvseSessionId"           type="INT32U"         optional="false"/>
      <field id="1" name="EvseState"               type="EvseStateEnum"  optional="false"/>
      <field id="2" name="EvseFaultPreviousState"  type="EvseStateEnum"  optional="false"/>
      <field id="4" name="EvseFaultCurrentState"   type="EvseStateEnum"  optional="false"/>
    </event>

    <event code="0x0005" name="Rfid" priority="info" side="server" optional="true">
      <description>Generated when a RFID card has been read.</description>
      <field id="0" name="Uid"  type="OCTET_STRING" length="10" optional="false" isNullable="true"/>
    </event>

  </cluster>

  <bitmap name="Feature" type="BITMAP32">
    <cluster code="0x070C"/>
    <field name="ChargingPreferences" mask="0x1"  optional="true"/>
    <field name="Sessions"            mask="0x2"  optional="true"/>
    <field name="SocReporting"        mask="0x4"  optional="true" />
    <field name="PlugAndCharge"       mask="0x8"  optional="true" />
    <field name="Rfid"                mask="0x10" optional="true" />
    <field name="V2x"                 mask="0x20" optional="true" />
  </bitmap>

</configurator>
